#!/usr/bin/env bash
set -E -e -o pipefail

# Add repo specific metadata here.

BASE_IMAGE_CONFIG_KEY_PREFIX="BASE_IMAGE"

RELEASE_PACKAGE_NAME="Blocky"
RELEASE_TAG_PACKAGE_NAME="blocky"

UPSTREAM_PACKAGE_NAME="Blocky"
UPSTREAM_VERSION_CONFIG_KEY="BLOCKY_VERSION"
UPSTREAM_GIT_REPO="https://github.com/0xERR0R/blocky"

TEST_TYPE="background"
TEST_CONTAINER_TYPE="blocky"
TEST_CONTAINER_START_WAIT_SECONDS="10"

current_upstream_version() {
    get_config_arg ${UPSTREAM_VERSION_CONFIG_KEY:?}
}

latest_upstream_version() {
    git -c 'versionsort.suffix=-' ls-remote \
        --exit-code \
        --refs \
        --sort='version:refname' \
        --tags \
        "${UPSTREAM_GIT_REPO:?}" | \
        cut --delimiter='/' --fields=3 | \
        sort --version-sort --reverse | \
        head -1
}

update_latest_upstream_version() {
    local cur_ver="${1:?}"
    local latest_ver="${2:?}"
    echo "Updating ${UPSTREAM_PACKAGE_NAME:?} ${UPSTREAM_VERSION_CONFIG_KEY:?} '${cur_ver:?}' -> '${latest_ver:?}'"
    set_config_arg "${UPSTREAM_VERSION_CONFIG_KEY:?}" "${latest_ver:?}"
    git add ${ARGS_FILE:?}
}

package_current_release_version() {
    current_upstream_version
}

test_start_container() {
    local container_name="${1:?}"

    docker run \
        --name ${container_name:?} \
        --detach \
        --rm \
        ${IMAGE:?}
}

test_image_after_container_startup() {
    local container_name="${1:?}"
    local ip="$(container_ip "${container_name:?}")"
    test_http_endpoint "${container_name:?}" http ${ip:?} 4000
    dig +short @${ip:?} one.one.one.one
    dig +short @${ip:?} -x 10.10.10.1
    dig +short @${ip:?} -x 10.10.10.2
    dig +short @${ip:?} -x 10.10.10.3
    dig +short @${ip:?} -x 10.10.10.4
}
